version: '3.8'

services:
  # B2C Investor Platform (Main UI)
  b2c-investor:
    build:
      context: .
      dockerfile: Dockerfile.b2c
    ports:
      - "8501:8501"
    environment:
      - REDIS_URL=redis://redis:6379
      - POSTGRES_URL=postgresql://user:pass@postgres:5432/b2c_investment
    depends_on:
      - postgres
      - redis
    networks:
      - b2c-network

  # Inference Container
  inference-container:
    build:
      context: ./containers/inference_container
      dockerfile: Dockerfile
    ports:
      - "8502:8501"
    environment:
      - REDIS_URL=redis://redis:6379
      - POSTGRES_URL=postgresql://user:pass@postgres:5432/b2c_investment
      - MODEL_STORAGE_PATH=/app/models
    volumes:
      - ./ml_models:/app/models
    depends_on:
      - postgres
      - redis
    networks:
      - b2c-network

  # Order Execution Container
  order-execution-container:
    build:
      context: ./containers/order_execution_container
      dockerfile: Dockerfile
    ports:
      - "8503:8501"
    environment:
      - REDIS_URL=redis://redis:6379
      - POSTGRES_URL=postgresql://user:pass@postgres:5432/b2c_investment
      - KITE_API_KEY=${KITE_API_KEY:-}
      - KITE_API_SECRET=${KITE_API_SECRET:-}
      - KITE_ACCESS_TOKEN=${KITE_ACCESS_TOKEN:-}
    depends_on:
      - postgres
      - redis
    networks:
      - b2c-network

  # Data Synthesizer Container
  data-synthesizer-container:
    build:
      context: ./containers/data_synthesizer_container
      dockerfile: Dockerfile
    ports:
      - "8504:8501"
    environment:
      - REDIS_URL=redis://redis:6379
      - POSTGRES_URL=postgresql://user:pass@postgres:5432/quant_trading
      - MAX_WORKERS=4
      - BATCH_SIZE=10000
    depends_on:
      - postgres
      - redis
    networks:
      - b2c-network

  # Feature Engineering Container
  feature-engineering-container:
    build:
      context: ./containers/feature_engineering_container
      dockerfile: Dockerfile
    ports:
      - "8505:8501"
    environment:
      - REDIS_URL=redis://redis:6379
      - POSTGRES_URL=postgresql://user:pass@postgres:5432/quant_trading
      - FEATURE_STORAGE_PATH=/app/features
    volumes:
      - ./ml_service:/app/ml_service
    depends_on:
      - postgres
      - redis
    networks:
      - b2c-network

  # Training Pipeline Container
  training-pipeline-container:
    build:
      context: ./containers/training_pipeline_container
      dockerfile: Dockerfile
    ports:
      - "8506:8501"
    environment:
      - REDIS_URL=redis://redis:6379
      - POSTGRES_URL=postgresql://user:pass@postgres:5432/quant_trading
      - MODEL_STORAGE_PATH=/app/models
      - MAX_TRAINING_TIME=3600
    volumes:
      - ./ml_models:/app/models
      - ./ml_service:/app/ml_service
    depends_on:
      - postgres
      - redis
    networks:
      - b2c-network

  # Hyperparameter Tuning Container
  hyperparameter-tuning:
    build:
      context: ./containers/hyperparameter_tuning_container
      dockerfile: Dockerfile
    ports:
      - "8509:8501"
    environment:
      - POSTGRES_URL=postgresql://user:pass@postgres:5432/quant_trading
      - REDIS_URL=redis://redis:6379
    volumes:
      - ./containers/hyperparameter_tuning_container:/app
    depends_on:
      - postgres
      - redis
    networks:
      - b2c-network

  # Evaluation Container
  evaluation-container:
    build:
      context: ./containers/evaluation_container
      dockerfile: Dockerfile
    ports:
      - "8510:8501"
    environment:
      - POSTGRES_URL=postgresql://user:pass@postgres:5432/quant_trading
      - REDIS_URL=redis://redis:6379
    volumes:
      - ./containers/evaluation_container:/app
      - ./ml_models:/app/models
    depends_on:
      - postgres
      - redis
      - hyperparameter-tuning
    networks:
      - b2c-network

  # Platform Monitor Container
  platform-monitor:
    build:
      context: ./containers/platform_monitor_container
      dockerfile: Dockerfile
    ports:
      - "8507:8501"
    environment:
      - REDIS_URL=redis://redis:6379
      - POSTGRES_URL=postgresql://user:pass@postgres:5432/quant_trading
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /proc:/host/proc:ro
    depends_on:
      - postgres
      - redis
    networks:
      - b2c-network

  # PostgreSQL Database
  postgres:
    image: postgres:15
    environment:
      - POSTGRES_DB=quant_trading
      - POSTGRES_USER=user
      - POSTGRES_PASSWORD=pass
    ports:
      - "5433:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - b2c-network

  # Redis Cache
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    networks:
      - b2c-network

  # Prometheus Monitoring
  prometheus:
    image: prom/prometheus:latest
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
    networks:
      - b2c-network

  # Grafana Dashboard
  grafana:
    image: grafana/grafana:latest
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
    volumes:
      - grafana_data:/var/lib/grafana
    depends_on:
      - prometheus
    networks:
      - b2c-network

volumes:
  postgres_data:
  prometheus_data:
  grafana_data:

networks:
  b2c-network:
    driver: bridge
